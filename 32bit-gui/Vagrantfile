# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
	config.vm.box = "ubuntu/trusty32"

	config.vm.provider "virtualbox" do |vb|
		# Display the VirtualBox GUI when booting the machine
		# vb.gui = true

		# Customize the amount of memory on the VM:
		vb.memory = "4096"
		vb.gui = true
	    vb.customize ["modifyvm", :id, "--memory", 4096]
        vb.customize ["modifyvm", :id, "--vram", 64]
	    vb.customize ["modifyvm", :id, "--accelerate3d", "on"]

  # Optimized for an Ubuntu 12.04 32-bit VM on a host running Windows XP SP3 32-bit
    # Set the amount of RAM, in MB, that the VM should allocate for itself, from the host
    #vb.customize ["modifyvm", :id, "--memory", "1024"]
    # Allow the VM to display the desktop environment
    #vb.customize ["modifyvm", :id, "--graphicscontroller", "vboxvga"]
    # Set the amount of RAM that the virtual graphics card should have
    #vb.customize ["modifyvm", :id, "--vram", "64"]
    # Advanced Programmable Interrupt Controllers (APICs) are a newer x86 hardware feature
    #vb.customize ["modifyvm", :id, "--ioapic", "on"]
    # Default host uses a USB mouse instead of PS2
    #vb.customize ["modifyvm", :id, "--mouse", "usb"]
    # Enable audio support for the VM & specify the audio controller
    #vb.customize ["modifyvm", :id, "--audio", "dsound", "--audiocontroller", "ac97"]
    # Enable the VM's virtual USB controller & enable the virtual USB 2.0 controller
    #vb.customize ["modifyvm", :id, "--usb", "on", "--usbehci", "on"]
    # Add IDE controller to the VM, to allow virtual media to be attached to the controller
    #vb.customize ["storagectl", :id, "--name", "IDE Controller", "--add", "ide"]
    # Give the VM access to the host's CD/DVD drive, by attaching the medium to the virtual IDE controller
    #vb.customize ["storageattach", :id, "--storagectl", "IDE Controller", "--port 0", "--device 0", "--type", "dvddrive"]
  #
  # For a 64-bit VM (courtesy of https://gist.github.com/mikekunze/7486548#file-ubuntu-desktop-vagrantfile)
  # vb.customize ["modifyvm", :id, "--memory", "2048"]
    # Set the number of virtual CPUs for the virtual machine
  # vb.customize ["modifyvm", :id, "--cpus", "2"]
  # vb.customize ["modifyvm", :id, "--graphicscontroller", "vboxvga"]
  # vb.customize ["modifyvm", :id, "--vram", "128"]
    # Enabling the I/O APIC is required for 64-bit guest operating systems, especially Windows Vista;
    # it is also required if you want to use more than one virtual CPU in a VM.
  # vb.customize ["modifyvm", :id, "--ioapic", "on"]
    # Enable the use of hardware virtualization extensions (Intel VT-x or AMD-V) in the processor of your host system
  # vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
    # Enable, if Guest Additions are installed, whether hardware 3D acceleration should be available
  # vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
  #

	end

	config.vm.provision "shell", inline: <<-SHELL
		echo "force-unsafe-io" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \
	  		&& echo "Acquire::http {No-Cache=True;};" > /etc/apt/apt.conf.d/no-cache
		
		add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/ trusty universe multiverse"
		add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates universe multiverse"
		
		apt-get update
		
		set -x \
		  && apt-get install -y unzip \
		    build-essential \
		    git \
		    libx11-dev libxt-dev libraw1394-dev libavc1394-dev libiec61883-dev libfreetype6-dev yasm autoconf libtool openjdk-7-jdk libfaac0

		echo '#!/bin/sh' > /etc/profile.d/88_sagedev.sh
		export JAVA_ARCH=i386
		export JDK_HOME=/usr/lib/jvm/java-7-openjdk-$JAVA_ARCH/
		echo "export JDK_HOME=$JDK_HOME" >> /etc/profile.d/88_sagedev.sh
		echo "export JAVA_ARCH=$JAVA_ARCH" >> /etc/profile.d/88_sagedev.sh

        # install desktop
		sudo apt-get install -y lubuntu-desktop
		cd /vagrant
		git clone https://github.com/google/sagetv.git
		cd sagetv/build
		./buildall.sh
		
		# download a sample video for testing
		mkdir -p /var/media/videos
		cd /var/media/videos
		wget http://techslides.com/demos/sample-videos/small.mp4
		
		# install sagetv
		cd /vagrant/sagetv/build
		dpkg -i sagetv-server_9.0.0_i386.deb
		dpkg -i sagetv-client_9.0.0_i386.deb
		
		# disable lock screen
		sudo mv /etc/xdg/autostart/light-locker.desktop /etc/xdg/autostart/light-locker.desktop.bak
		
		# enable auto login
		echo '[SeatDefaults]' > /etc/lightdm/lightdm.conf.d/30-vagrant.conf		
		echo 'user-session=Lubuntu' >> /etc/lightdm/lightdm.conf.d/30-vagrant.conf		
		echo 'autologin-user=vagrant' >> /etc/lightdm/lightdm.conf.d/30-vagrant.conf		
		echo 'autologin-user-timeout=0' >> /etc/lightdm/lightdm.conf.d/30-vagrant.conf				
		
		echo "** 'vagrant halt' this machine and then 'vagrant up' again, to auto-boot into the GUI **"
	SHELL

end
