# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
	config.vm.box = "ubuntu/trusty32"

	config.vm.provider "virtualbox" do |vb|
		# Display the VirtualBox GUI when booting the machine
		# vb.gui = true

		# Customize the amount of memory on the VM:
		vb.memory = "4096"
	end

	config.vm.provision "shell", inline: <<-SHELL
		echo "force-unsafe-io" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \
	  		&& echo "Acquire::http {No-Cache=True;};" > /etc/apt/apt.conf.d/no-cache
		echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections

		add-apt-repository ppa:webupd8team/java \
		  && apt-get update \
		  && apt-get install -y oracle-java8-installer

		set -x \
		  && apt-get install -y unzip \
		    build-essential \
		    git \
		    libx11-dev libxt-dev libraw1394-dev libavc1394-dev libiec61883-dev libfreetype6-dev yasm autoconf libtool \
		    libaudio-dev libpulse-dev libasound-dev

		echo '#!/bin/sh' > /etc/profile.d/88_sagedev.sh
		echo 'export JDK_HOME=/usr/lib/jvm/java-8-oracle' >> /etc/profile.d/88_sagedev.sh
		echo 'export JAVA_ARCH=i386' >> /etc/profile.d/88_sagedev.sh

		echo '#!/bin/sh' > /etc/update-motd.d/99-sagedev
		echo 'echo' >> /etc/update-motd.d/99-sagedev
		echo 'echo "*** SAGETV Quick Start ***"' >> /etc/update-motd.d/99-sagedev
		echo 'echo "git clone https://github.com/google/sagetv.git"' >> /etc/update-motd.d/99-sagedev
		echo 'echo "cd sagetv/build"' >> /etc/update-motd.d/99-sagedev
		echo 'echo "./buildall.sh"' >> /etc/update-motd.d/99-sagedev
		echo 'echo "*** SAGETV Quick Start ***"' >> /etc/update-motd.d/99-sagedev
		echo 'echo' >> /etc/update-motd.d/99-sagedev
		chmod 755 /etc/update-motd.d/99-sagedev
	SHELL
	
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
